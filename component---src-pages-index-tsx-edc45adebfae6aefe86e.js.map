{"version":3,"file":"component---src-pages-index-tsx-edc45adebfae6aefe86e.js","mappings":"iKAgDA,IA5CY,WAAO,IAAD,EAiBRA,EAAM,WAhBCC,EAAAA,EAAAA,gBAAe,cAgBRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACI,uBAAKI,UAAU,OACX,gBAAC,EAAAC,EAAD,CACID,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARR,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACL,yBACI,8BAASb,EAAOa,MAChB,2BACCb,EAAOc,QACR,2BACA,qBAAGC,KAAI,+BAAP,c,kFCgBpB,UAlDkB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACjBC,GAAY,UAAAF,EAAKd,KAAKC,oBAAV,eAAwBgB,QAAxB,QACZC,EAAQJ,EAAKK,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEF,gBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GAC/B,gBAAC,IAAD,CAAKC,MAAM,OACX,gBAAC,IAAD,MACA,6CAMR,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GAC/B,gBAAC,IAAD,CAAKC,MAAM,OACX,gBAAC,IAAD,MACA,sBAAIK,MAAO,CAAEC,UAAU,SAClBL,EAAMM,KAAI,SAAAC,GACP,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACI,sBAAIC,IAAKJ,EAAKE,OAAOC,MACjB,2BAAS1B,UAAU,iBAAiB4B,WAAS,EAACC,SAAS,6BACnD,8BACI,0BACI,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACjC,wBAAMA,SAAS,YAAYjB,KAGnC,6BAAQQ,EAAKC,YAAYS,OAE7B,+BACI,qBACIC,wBAAyB,CACrBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAEjDL,SAAS,0B","sources":["webpack://gatsby-starter-blog/./src/components/bio.tsx","webpack://gatsby-starter-blog/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Bio = () => {\n    const data = useStaticQuery(graphql`\n        query BioQuery {\n            site {\n                siteMetadata {\n                    author {\n                        name\n                        summary\n                    }\n                    social {\n                        twitter\n                    }\n                }\n            }\n        }\n    `);\n\n    const author = data.site.siteMetadata?.author;\n\n    return (\n        <div className=\"bio\">\n            <StaticImage\n                className=\"bio-avatar\"\n                layout=\"fixed\"\n                formats={[\"auto\", \"webp\", \"avif\"]}\n                src=\"../images/my_profile.jpeg\"\n                width={80}\n                height={80}\n                quality={95}\n                alt=\"Profile picture\"\n            />\n            {author?.name && (\n                <p>\n                    <strong>{author.name}</strong>\n                    <br />\n                    {author.summary}\n                    <br />\n                    <a href={`https://github.com/paerck25`}>Github</a>\n                </p>\n            )}\n        </div>\n    );\n};\n\nexport default Bio;\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst BlogIndex = ({ data, location }) => {\n    const siteTitle = data.site.siteMetadata?.title || `Title`;\n    const posts = data.allMarkdownRemark.nodes;\n\n    if (posts.length === 0) {\n        return (\n            <Layout location={location} title={siteTitle}>\n                <Seo title=\"메인\" />\n                <Bio />\n                <p>포스트가 존재하지 않습니다.</p>\n            </Layout>\n        );\n    }\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Seo title=\"메인\" />\n            <Bio />\n            <ol style={{ listStyle: `none` }}>\n                {posts.map(post => {\n                    const title = post.frontmatter.title || post.fields.slug;\n\n                    return (\n                        <li key={post.fields.slug}>\n                            <article className=\"post-list-item\" itemScope itemType=\"http://schema.org/Article\">\n                                <header>\n                                    <h2>\n                                        <Link to={post.fields.slug} itemProp=\"url\">\n                                            <span itemProp=\"headline\">{title}</span>\n                                        </Link>\n                                    </h2>\n                                    <small>{post.frontmatter.date}</small>\n                                </header>\n                                <section>\n                                    <p\n                                        dangerouslySetInnerHTML={{\n                                            __html: post.frontmatter.description || post.excerpt\n                                        }}\n                                        itemProp=\"description\"\n                                    />\n                                </section>\n                            </article>\n                        </li>\n                    );\n                })}\n            </ol>\n        </Layout>\n    );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n            nodes {\n                excerpt\n                fields {\n                    slug\n                }\n                frontmatter {\n                    date(formatString: \"YYYY-MM-DD\")\n                    title\n                    description\n                }\n            }\n        }\n    }\n`;\n"],"names":["author","useStaticQuery","site","siteMetadata","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","data","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}